# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane
opt_out_usage

default_platform(:ios)

# platform :android do
#   desc "Runs all the tests"
#   lane :test do
#     gradle(task: "test")
#   end
#
#   desc "Submit a new Beta Build to Crashlytics Beta"
#   lane :beta do
#     gradle(task: "clean assembleRelease")
#     crashlytics
#
#     # sh "your_script.sh"
#     # You can also use other beta testing services here
#   end
#
#   desc "Deploy a new version to the Google Play"
#   lane :deploy do
#     gradle(task: "clean assembleRelease")
#     upload_to_play_store
#   end
# end

TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

platform :ios do
  before_all do
    ensure_temp_keychain(TEMP_KEYCHAIN_USER, TEMP_KEYCHAIN_PASSWORD)
  end
  lane :beta do
    app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY_CONTENT'],
      duration: 1200,
      in_house: false
    )

    git_apple_keys_token_user = ENV['GIT_APPLE_KEYS_TOKEN_USER']
    git_apple_keys_token_value = ENV['GIT_APPLE_KEYS_TOKEN_VALUE']
    git_apple_keys_url = ENV['GIT_APPLE_KEYS_URL']

    match(type: 'appstore', verbose: true, keychain_name: TEMP_KEYCHAIN_USER, keychain_password: TEMP_KEYCHAIN_PASSWORD, readonly: true, git_url: git_apple_keys_url, git_basic_authorization: Base64.strict_encode64("#{git_apple_keys_token_user}:#{git_apple_keys_token_value}"))
    update_project_team(
      path: "./ios/App/App.xcodeproj",
      teamid: ENV['APPLE_DEVELOPER_PORTAL_TEAM_ID']
    )
    update_code_signing_settings(
      use_automatic_signing: false,
      path: "./ios/App/App.xcodeproj",
      team_id: ENV['APPLE_DEVELOPER_PORTAL_TEAM_ID'],
      bundle_identifier: "com.zkorum.feed",
      profile_name: ENV['APPLE_DIST_PROFILE_NAME'],
      profile_uuid: ENV['APPLE_DIST_PROFILE_UUID'],
      sdk: "iphoneos*",
      code_sign_identity: ENV['APPLE_DIST_CERTIFICATE_NAME'],
    )
    build_app
    upload_to_testflight(skip_waiting_for_build_processing: true)
    delete_temp_keychain(TEMP_KEYCHAIN_USER)
  end
end
